services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password1
      POSTGRES_DB: agentic_rag
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # MongoDB for vector storage
  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: agentic-rag/backend:dev
    ports:
      - "8000:8000"
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Password1
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=agentic_rag
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - MONGO_DB_NAME=agentic_rag
      - SECRET_KEY=development_secret_key
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-dummy-key}
      - SKIP_DB=false
      - START_MCP_SERVER=true
    command: sh -c "pip install psycopg2-binary && uvicorn src.main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Frontend application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: agentic-rag/frontend:dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development_nextauth_secret
      - NEXTAUTH_URL_INTERNAL=http://frontend:3000
      - NEXTAUTH_BACKEND_URL_INTERNAL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  mongo_data:
  