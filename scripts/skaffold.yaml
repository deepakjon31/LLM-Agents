apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: llm-agents
build:
  local:
    push: false
    useDockerCLI: true
    useBuildkit: true
    concurrency: 0 # Use all available cores
  artifacts:
  - image: backend
    context: ../backend
    docker:
      dockerfile: Dockerfile.dev
      noCache: false
      cacheFrom:
        - backend:latest
    sync:
      manual:
        - src: 'src/**/*.py'
          dest: /app/src
        - src: 'models/**/*.py'
          dest: /app/models
        - src: 'routes/**/*.py'
          dest: /app/routes
        - src: 'services/**/*.py'
          dest: /app/services
        - src: 'mcp/**/*.py'
          dest: /app/mcp
        - src: 'schemas/**/*.py'
          dest: /app/schemas
        - src: 'utils/**/*.py'
          dest: /app/utils
        - src: '*.py'
          dest: /app
        - src: '**/*.json'
          dest: /app
        - src: '**/*.yaml'
          dest: /app
        - src: '**/*.yml'
          dest: /app
  - image: frontend
    context: ../frontend
    docker:
      dockerfile: Dockerfile.dev
      noCache: false
      cacheFrom:
        - frontend:latest
    sync:
      manual:
        - src: 'src/**/*'
          dest: /app/src
        - src: 'components/**/*'
          dest: /app/components
        - src: 'pages/**/*'
          dest: /app/pages
        - src: 'styles/**/*'
          dest: /app/styles
        - src: 'lib/**/*'
          dest: /app/lib
        - src: 'public/**/*'
          dest: /app/public
        - src: 'hooks/**/*'
          dest: /app/hooks
        - src: 'utils/**/*'
          dest: /app/utils
        - src: 'context/**/*'
          dest: /app/context
        - src: '*.json'
          dest: /app
        - src: '*.js'
          dest: /app
        - src: '*.ts'
          dest: /app
        - src: '*.jsx'
          dest: /app
        - src: '*.tsx'
          dest: /app
deploy:
  kubectl:
    flags:
      apply:
        - --force
    hooks:
      before:
        - command: ["sh", "-c", "kubectl create namespace agentic-rag --dry-run=client -o yaml | kubectl apply -f -"]
      after:
        - command: ["sh", "-c", "echo 'Deployment complete'"]
    manifests:
      - ../k8s/backend/deployment.yaml
      - ../k8s/backend/service.yaml
      - ../k8s/backend/mcp-service.yaml
      - ../k8s/backend/configmap.yaml
      - ../k8s/frontend/deployment.yaml
      - ../k8s/frontend/service.yaml
      - ../k8s/secrets.yaml
      - ../k8s/ingress.yaml
      - ../k8s/databases/mongo-deployment.yaml
      - ../k8s/databases/mongo-service.yaml
      - ../k8s/databases/postgres-deployment.yaml
      - ../k8s/databases/postgres-service.yaml
      - ../k8s/databases/postgres-initdb-configmap.yaml
    defaultNamespace: agentic-rag
portForward:
  - resourceType: service
    resourceName: frontend
    namespace: agentic-rag
    port: 3000
    localPort: 3000
  - resourceType: service
    resourceName: backend
    namespace: agentic-rag
    port: 8000
    localPort: 8000
  - resourceType: service
    resourceName: mcp
    namespace: agentic-rag
    port: 8080
    localPort: 8080
  - resourceType: deployment
    resourceName: postgres
    namespace: agentic-rag
    port: 5432
    localPort: 5432
  - resourceType: deployment
    resourceName: mongodb
    namespace: agentic-rag
    port: 27017
    localPort: 27017
statusCheck: true
verify:
  - name: frontend-verify
    container:
      name: frontend
      image: frontend
      command: ["sh", "-c", "wget --spider -T 10 http://localhost:3000 || exit 1"]
  - name: backend-verify
    container:
      name: backend
      image: backend
      command: ["sh", "-c", "wget --spider -T 10 http://localhost:8000 || exit 1"]
profiles:
  - name: dev
    activation:
      - command: dev
    patches:
      - op: add
        path: /build/artifacts/0/docker/buildArgs
        value:
          ENVIRONMENT: development
          START_MCP_SERVER: "true"
          MCP_SERVER_PORT: "8080"
          DEBUG: "true"
      - op: add
        path: /build/artifacts/1/docker/buildArgs
        value:
          NODE_ENV: development
          NEXT_PUBLIC_API_URL: http://api.app.local:8000
          NEXT_PUBLIC_MCP_URL: http://mcp.app.local:8080
  - name: docker-desktop
    activation:
      - kubeContext: docker-desktop
    patches:
      - op: add
        path: /deploy/kubectl/defaultNamespace
        value: agentic-rag
  - name: debug
    patches:
      - op: add
        path: /build/local/skipTests
        value: true
      - op: add
        path: /deploy/logs
        value:
          prefix: "[{{.Color.Cyan}}{{.Pod}}{{.Color.Reset}}]"
  - name: minikube
    activation:
      - kubeContext: minikube
    patches:
      - op: add
        path: /build/local/push
        value: true 